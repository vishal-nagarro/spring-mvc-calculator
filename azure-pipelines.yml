# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java


trigger:
  branches:
    include:
      - dev

schedules:
- cron: "30 11 * * Wed,Fri"   # Runs at 5:00 PM IST (11:30 AM UTC)
  displayName: "Scheduled Build - Wednesday and Friday at 5 PM IST"
  branches:
    include:
      - dev
  always: true  # Ensures the pipeline runs even if there are no code changes

pool:
  name: 'Default'
  vmImage: ubuntu-latest

variables:
  JAVA_HOME_11_X64: '/usr/lib/jvm/java-11-openjdk'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml' 
    continueOnError: true


- script: exit 1  # Simulating a build failure
  displayName: 'Fail the Build'

# Bug Creation Task - Runs only if the Maven build fails
- task: Bash@3
  condition: failed()
  inputs:
    targetType: 'inline'
    script: |
      echo "Starting Bug Creation"

      export PAT-TOKEN="$(PAT-TOKEN)"
      PROJECT_URL="$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_apis/wit/workitems/$Bug?api-version=6.0"

      JSON_DATA='[
        {
          "op": "add",
          "path": "/fields/System.Title",
          "value": "Build Failure: $(Build.DefinitionName) - $(Build.BuildNumber)"
        },
        {
          "op": "add",
          "path": "/fields/System.Description",
          "value": "The build $(Build.BuildNumber) failed in branch $(Build.SourceBranch). Check logs for details."
        },
        {
          "op": "add",
          "path": "/fields/System.AssignedTo",
          "value": $(assignee-email) 
        }
      ]'

      echo "Creating bug in Azure DevOps..."
      
      RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST \
        -H "Content-Type: application/json-patch+json" \
        -H "Authorization: Bearer $PAT-TOKEN" \
        --data "$JSON_DATA" --http1.1 "$PROJECT_URL")
      
      echo "API Response Code: $RESPONSE"
      echo "API Response Body:"
      cat response.json

  displayName: 'Create Bug in Azure DevOps'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'JUnit Test Results'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/target'
    Contents: '**/*.war'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
