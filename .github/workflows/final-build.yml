# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build with Sonar Scan and JFrog Artifactory Integration

on:
  workflow_dispatch: # Enables manual trigger
  push:
    branches: ["dev", "feature"]

jobs:
  build_and_test:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate git info

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # - name: Cache Maven packages
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.m2
      #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        continue-on-error: false # Fails the pipeline if build fails

      # - name: Cache SonarQube packages
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar

      - name: Generate test report
        run: mvn surefire-report:report
        continue-on-error: true # Even if tests fail, generate the report
  
      - name: Publish Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ github.ref_name }}-${{ github.sha }}
          path: target/surefire-reports/
  
      - name: Generate Code Coverage Report
        run: mvn jacoco:report
        continue-on-error: true
  
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ github.ref_name }}-${{ github.sha }}
          path: target/reports/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=vishal-nagarro_spring-mvc-calculator
            -Dsonar.organization=vishal-nagarro
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.sources=src/main/java 
            -Dsonar.java.libraries=target/classes
            -Dsonar.java.binaries=target/classes
            -Dsonar.java.test.libraries=target/test-classes
            -Dsonar.java.test.binaries=target/test-classes
            -Dsonar.junit.reportPaths=target/surefire-reports

      - name: Upload Build Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: spring-mvc-app-${{ github.ref_name }}-${{ github.sha }}
          path: |
            target/*.jar
            target/*.war
          retention-days: 14

  jfrog_artifactory:
    needs: build_and_test
    runs-on: self-hosted

    env:
      JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}

    steps:
      - name: JFrog Artifactory Setup
        uses: jfrog/setup-jfrog-cli@v4
      - run: |
          # Ping the server
          jf rt ping

      - name: JFrog Artifactory Publish
        run: |
          jfrog rt u "**/*.war" ${{ secrets.JF_ARTIFACTORY_REPO }}/$(date +%Y-%m-%d_%H-%M-%S)/ --build-name=${{ github.run_id }} --build-number=${{ github.run_number }}

  
  notify:
    needs: [build_and_test]
    if: failure() # Only runs if the build job fails
    runs-on: self-hosted

    steps:
      - name: Send Failure Notification via Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Build Failed: ${{ github.repository }}"
          body: "The latest build of ${{ github.repository }} has failed. Please check the logs in GitHub Actions."
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: "GitHub Actions Bot"
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
